@use "mixins" as *;
@use "text" as *;
@use "breakpoint" as *;
@use "icon" as *;

.dropzone {
	display: flex;
	flex-direction: column;
	gap: 6px 0;

	&__title {
		@extend %font-2;
	}

	&__label {
		border-radius: var(--default-border-radius-small);
		border: var(--default-border-width) dashed var(--default-border-color);
		flex-grow: 1;
		display: flex;
		align-items: center;
		justify-content: center;
		min-height: 100px;
		padding: gap-scale(0.5) gap-scale(1);
		cursor: pointer;
		transition: border-color ease var(--default-duration);
		order: 1;
		@include hoverTypeBorder;
		position: relative;
	}

	&__label &__input {
		position: absolute;
		inset: 0;
		opacity: 0;
	}

	&.is-dragover &__label {
		border-color: var(--color-accent);
	}

	&.is-full &__label {
		display: none;
	}

	&__input {
		cursor: pointer;

		&.is-dragover {}
	}

	&__list {
		display: flex;
		flex-direction: column;
		flex-grow: 1;
	}

	&__item {
		display: flex;
		gap: 8px;

		& + & {
			border-top: var(--default-border-width) dotted var(--default-border-color);
		}

		&::after {
			content: attr(title);
			width: 100%;
			max-height: 100%;
			overflow: hidden;
			min-width: 0;
			align-self: center;
			justify-self: center;
			overflow-wrap: break-word;
			pointer-events: none;
		}

		&__preview {
			display: block;
			width: 64px;
			height: 64px;
			order: -1;
			flex-shrink: 0;

			&:has(img:not([src])) {
				&::after {
					content: "";
					@extend %icon, %icon--description;
					width: 100%;
					height: 100%;
				}
			}

			img {
				height: 100%;

				&:not([src]) {
					display: none;
				}
			}
		}

		&__remove {
			order: 1;
			align-self: start;
			justify-self: end;
			border: none;
			background-color: transparent;
			cursor: pointer;
			@include hoverType2;

			&::after {
				content: "";
				@extend %icon, %icon--close;
			}
		}
	}
}