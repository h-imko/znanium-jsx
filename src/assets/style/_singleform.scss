@use "mixins" as *;
@use "breakpoint" as *;
@use "button" as *;
@use "icon" as *;

.singleform {
	&__inner {
		display: flex;
		flex-direction: column;
		gap: gap-scale(0.5);
	}

	&__main {
		@media (min-width: $mobile) {
			border: var(--default-border-width) solid var(--color-primary);
			display: flex;
			gap: 8px;
			border-radius: var(--default-border-radius-small);
		}

		@media (max-width: $mobile) {
			display: flex;
			flex-wrap: wrap;
			gap: gap-scale(0.5);
			justify-content: space-between;
		}

		&__group {
			@media (max-width: $mobile) {
				width: 100%;
				order: -1;
				border: var(--default-border-width) solid var(--color-primary);
				display: flex;
				gap: 8px;
				border-radius: var(--default-border-radius-small);
				padding: 12px 8px;
			}

			@media (min-width: $mobile) {
				display: contents;
			}
		}
	}

	&__input {
		border: none;
		background: #0000;
		width: 100%;
		padding: 0 8px;

		&::placeholder {
			color: var(--color-text2);
		}
	}

	&__controls {
		display: flex;
		align-items: center;
		gap: 8px;

		&__item {
			@include hoverType2;
		}
	}

	&__button {
		@extend %button;

		@media (min-width: $mobile) {
			border-radius: 0;
		}
	}

	&__select {
		display: flex;
		color: var(--color-text-alt);
		border-radius: var(--default-border-radius-small);
		min-height: var(--button-height);
		padding: 4px 4px 4px 4px;
		--icon-size: 24;
		--px: 8px;
		cursor: pointer;
		transition: all ease .3s;

		@media (max-width: $mobile) {
			padding: 0;
		}

		&::after {
			content: "";
			@extend %icon, %icon--chevron_down;
			pointer-events: none;
		}

		select {
			height: 100%;
			display: flex;
			align-items: center;
			user-select: none;
			color: inherit;
			border-radius: inherit;
			margin-right: calc((var(--icon-size) * 1px + 4px) * -1);
			padding-left: calc(var(--px));
			padding-right: calc(var(--px) - 4px + var(--icon-size) * 1px);

			&:has(option:nth-child(1):checked) {
				background-color: var(--color-accent);
			}

			&:has(option:nth-child(2):checked) {
				background-color: var(--color-accent-alt2);
			}

			&:has(option:nth-child(3):checked) {
				background-color: var(--color-accent-alt1);
			}

			option {
				background: var(--color-text1);
				color: var(--color-text-alt);
			}

			@layer unset {
				& {
					all: unset;
				}
			}
		}
	}

	&__suggest {
		--gap: 8px;
		@extend %font-2;
		display: flex;
		align-items: center;
		flex-wrap: wrap;
		gap: var(--gap);
		padding: gap-scale(0.5) gap-scale(1);

		@media (max-width: $mobile) {
			gap: 6px;
		}

		%has-divider {
			padding-left: var(--gap);
			border-left: 1px solid var(--color-text1);
		}

		&__extra {
			order: 2;

			&.is-active {
				display: contents;
			}

			&:not(.is-active) &__list {
				display: none;
			}

			&__list {
				display: contents;
			}

			&.is-active &__opener {
				display: none;
			}

			&__opener {
				--icon-size: 24;
				background-color: var(--color-primary-light);
				color: var(--color-primary);
				height: calc(var(--icon-size) / 2 * 1px);
				width: calc(var(--icon-size) * 1px);
				display: flex;
				align-items: center;
				overflow: hidden;
				border-radius: var(--default-border-radius-small);
				@include hoverType2;

				&::before {
					content: "";
					@extend %icon, %icon--more_h;
				}
			}
		}

		&__item {
			text-decoration: underline;
			color: var(--color-primary);
			cursor: pointer;

			&:has(input[type=radio]:checked) {
				text-decoration: none;
				color: var(--color-accent);
			}

			&:is(:hover, :focus-within) {
				text-decoration: none;
			}

			&:not(:last-child) {
				border-right: 1px solid var(--default-border-color);
				padding-right: var(--gap);
			}

			input[type=radio] {
				opacity: 0;
				position: absolute;
				pointer-events: none;
			}
		}
	}
}